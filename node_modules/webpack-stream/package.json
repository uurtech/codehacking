{
  "_args": [
    [
      {
        "raw": "webpack-stream@github:jeroennoten/webpack-stream#patch-1",
        "scope": null,
        "escapedName": "webpack-stream",
        "name": "webpack-stream",
        "rawSpec": "github:jeroennoten/webpack-stream#patch-1",
        "spec": "github:jeroennoten/webpack-stream#patch-1",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:jeroennoten/webpack-stream.git#patch-1",
          "sshUrl": "git+ssh://git@github.com/jeroennoten/webpack-stream.git#patch-1",
          "httpsUrl": "git+https://github.com/jeroennoten/webpack-stream.git#patch-1",
          "gitUrl": "git://github.com/jeroennoten/webpack-stream.git#patch-1",
          "shortcut": "github:jeroennoten/webpack-stream#patch-1",
          "directUrl": "https://raw.githubusercontent.com/jeroennoten/webpack-stream/patch-1/package.json"
        }
      },
      "C:\\MAMP\\htdocs\\codehacking\\node_modules\\laravel-elixir-webpack-official"
    ]
  ],
  "_from": "jeroennoten/webpack-stream#patch-1",
  "_id": "webpack-stream@3.2.0",
  "_inCache": true,
  "_location": "/webpack-stream",
  "_phantomChildren": {
    "assert": "1.4.1",
    "browserify-zlib": "0.1.4",
    "buffer": "4.9.1",
    "buffer-shims": "1.0.0",
    "chokidar": "1.6.1",
    "clone": "1.0.2",
    "clone-stats": "0.0.1",
    "console-browserify": "1.1.0",
    "constants-browserify": "1.0.0",
    "core-util-is": "1.0.2",
    "domain-browser": "1.1.7",
    "events": "1.1.1",
    "has-flag": "1.0.0",
    "https-browserify": "0.0.1",
    "inherits": "2.0.3",
    "loader-utils": "0.2.16",
    "memory-fs": "0.3.0",
    "mkdirp": "0.5.1",
    "optimist": "0.6.1",
    "os-browserify": "0.2.1",
    "path-browserify": "0.0.0",
    "pbkdf2-compat": "2.0.1",
    "process": "0.11.9",
    "process-nextick-args": "1.0.7",
    "punycode": "1.4.1",
    "querystring-es3": "0.2.1",
    "replace-ext": "0.0.1",
    "setimmediate": "1.0.5",
    "stream-browserify": "2.0.1",
    "stream-http": "2.6.3",
    "string_decoder": "0.10.31",
    "tty-browserify": "0.0.0",
    "uglify-js": "2.7.5",
    "url": "0.11.0",
    "util": "0.10.3",
    "util-deprecate": "1.0.2",
    "vm-browserify": "0.0.4",
    "webpack-core": "0.6.9"
  },
  "_requested": {
    "raw": "webpack-stream@github:jeroennoten/webpack-stream#patch-1",
    "scope": null,
    "escapedName": "webpack-stream",
    "name": "webpack-stream",
    "rawSpec": "github:jeroennoten/webpack-stream#patch-1",
    "spec": "github:jeroennoten/webpack-stream#patch-1",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:jeroennoten/webpack-stream.git#patch-1",
      "sshUrl": "git+ssh://git@github.com/jeroennoten/webpack-stream.git#patch-1",
      "httpsUrl": "git+https://github.com/jeroennoten/webpack-stream.git#patch-1",
      "gitUrl": "git://github.com/jeroennoten/webpack-stream.git#patch-1",
      "shortcut": "github:jeroennoten/webpack-stream#patch-1",
      "directUrl": "https://raw.githubusercontent.com/jeroennoten/webpack-stream/patch-1/package.json"
    }
  },
  "_requiredBy": [
    "/laravel-elixir-webpack-official"
  ],
  "_resolved": "git://github.com/jeroennoten/webpack-stream.git#d78a3568e259f9cdbc64c60290639af6ef6d3baf",
  "_shasum": "3eca92d2fe8328587c82916931531624eea58bfe",
  "_shrinkwrap": null,
  "_spec": "webpack-stream@github:jeroennoten/webpack-stream#patch-1",
  "_where": "C:\\MAMP\\htdocs\\codehacking\\node_modules\\laravel-elixir-webpack-official",
  "author": {
    "name": "Kyle Robinson Young",
    "email": "kyle@dontkry.com",
    "url": "http://dontkry.com"
  },
  "bugs": {
    "url": "https://github.com/shama/webpack-stream/issues"
  },
  "dependencies": {
    "gulp-util": "^3.0.7",
    "lodash.clone": "^4.3.2",
    "lodash.some": "^4.2.2",
    "memory-fs": "^0.3.0",
    "through": "^2.3.8",
    "vinyl": "^1.1.0",
    "webpack": "^1.12.9"
  },
  "description": "Run webpack as a stream",
  "devDependencies": {
    "gulp": "^3.9.0",
    "rimraf": "^2.4.4",
    "semistandard": "^7.0.4",
    "tape": "^4.2.2",
    "vinyl-fs": "^2.2.1",
    "vinyl-named": "^1.1.0"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "d78a3568e259f9cdbc64c60290639af6ef6d3baf",
  "homepage": "https://github.com/shama/webpack-stream",
  "keywords": [
    "gulpplugin",
    "webpack",
    "stream"
  ],
  "license": "MIT",
  "name": "webpack-stream",
  "optionalDependencies": {},
  "readme": "# webpack-stream [![Build Status](http://img.shields.io/travis/shama/webpack-stream.svg)](https://travis-ci.org/shama/webpack-stream)\r\n\r\nRun [webpack](https://github.com/webpack/webpack) as a stream to conveniently integrate with gulp.\r\n\r\n[![NPM](https://nodei.co/npm/webpack-stream.png?downloads=true)](https://nodei.co/npm/webpack-stream/)\r\n\r\n## Usage\r\n\r\n```js\r\nvar gulp = require('gulp');\r\nvar webpack = require('webpack-stream');\r\ngulp.task('default', function() {\r\n  return gulp.src('src/entry.js')\r\n    .pipe(webpack())\r\n    .pipe(gulp.dest('dist/'));\r\n});\r\n```\r\n\r\nThe above will compile `src/entry.js` into assets with webpack into `dist/` with the output filename of `[hash].js` (webpack generated hash of the build).\r\n\r\nYou can pass webpack options in with the first argument, including `watch` which will greatly decrease compilation times:\r\n\r\n```js\r\nreturn gulp.src('src/entry.js')\r\n  .pipe(webpack({\r\n    watch: true,\r\n    module: {\r\n      loaders: [\r\n        { test: /\\.css$/, loader: 'style!css' },\r\n      ],\r\n    },\r\n  }))\r\n  .pipe(gulp.dest('dist/'));\r\n```\r\n\r\nOr just pass in your `webpack.config.js`:\r\n\r\n```js\r\nreturn gulp.src('src/entry.js')\r\n  .pipe(webpack( require('./webpack.config.js') ))\r\n  .pipe(gulp.dest('dist/'));\r\n```\r\n\r\nIf you would like to use a different version of webpack than the one this plugin uses, pass in an optional 2nd argument:\r\n\r\n```js\r\nvar gulp = require('gulp');\r\nvar webpack = require('webpack');\r\nvar gulpWebpack = require('webpack-stream');\r\ngulp.task('default', function() {\r\n  return gulp.src('src/entry.js')\r\n    .pipe(gulpWebpack({}, webpack))\r\n    .pipe(gulp.dest('dist/'));\r\n});\r\n```\r\n\r\nPass in 3rd argument if you want to access the stats outputted from webpack when the compilation is done:\r\n\r\n\r\n```js\r\nvar gulp = require('gulp');\r\nvar webpack = require('webpack-stream');\r\ngulp.task('default', function() {\r\n  return gulp.src('src/entry.js')\r\n    .pipe(webpack({\r\n      /* config */\r\n    }, null, function(err, stats) {\r\n      /* Use stats to do more things if needed */\r\n    }))\r\n    .pipe(gulp.dest('dist/'));\r\n});\r\n```\r\n\r\n#### Multiple Entry Points\r\n\r\nA common request is how to handle multiple entry points. You can continue to pass in an `entry` option in your typical webpack config like so:\r\n\r\n```js\r\nvar gulp = require('gulp');\r\nvar webpack = require('webpack-stream');\r\ngulp.task('default', function() {\r\n  return gulp.src('src/entry.js')\r\n    .pipe(webpack({\r\n      entry: {\r\n        app: 'src/app.js',\r\n        test: 'test/test.js',\r\n      },\r\n      output: {\r\n        filename: '[name].js',\r\n      },\r\n    }))\r\n    .pipe(gulp.dest('dist/'));\r\n});\r\n```\r\n\r\nOr pipe files through a stream that names the chunks. A convenient library for this is [vinyl-named](https://github.com/shama/vinyl-named):\r\n\r\n```js\r\nvar gulp = require('gulp');\r\nvar webpack = require('webpack-stream');\r\nvar named = require('vinyl-named');\r\ngulp.task('default', function() {\r\n  return gulp.src(['src/app.js', 'test/test.js'])\r\n    .pipe(named())\r\n    .pipe(webpack())\r\n    .pipe(gulp.dest('dist/'));\r\n});\r\n```\r\n\r\nThe above `named()` stream will add a `.named` property to the vinyl files passing through. The `webpack()` stream will read those as entry points and even group entry points with common names together.\r\n\r\n#### Source Maps\r\n\r\nSource maps are built into webpack, specify a [devtool](https://webpack.github.io/docs/configuration.html#devtool):\r\n\r\n```js\r\nvar gulp = require('gulp');\r\nvar webpack = require('webpack-stream');\r\nvar named = require('vinyl-named');\r\ngulp.task('default', function() {\r\n  return gulp.src(['src/app.js', 'test/test.js'])\r\n    .pipe(named())\r\n    .pipe(webpack({\r\n      devtool: 'source-map'\r\n    }))\r\n    .pipe(gulp.dest('dist/'));\r\n});\r\n```\r\n\r\nNow the appropriate `.map` files will be emitted. Or set to `inline-source-map`\r\nto inline the source maps into the files.\r\n\r\nIf you need further special handling of source maps, such as using with\r\n[gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps) then just pipe\r\nto a stream and handle the source map files emitted by webpack:\r\n\r\n```js\r\nvar gulp = require('gulp');\r\nvar webpack = require('webpack-stream');\r\nvar named = require('vinyl-named');\r\nvar through = require('through2');\r\nvar sourcemaps = require('gulp-sourcemaps');\r\ngulp.task('default', function() {\r\n  return gulp.src(['src/app.js', 'test/test.js'])\r\n    .pipe(named())\r\n    .pipe(webpack({\r\n      devtool: 'source-map'\r\n    }))\r\n    .pipe(sourcemaps.init({loadMaps: true}))\r\n    .pipe(through.obj(function (file, enc, cb) {\r\n      // Dont pipe through any source map files as it will be handled\r\n      // by gulp-sourcemaps\r\n      var isSourceMap = /\\.map$/.test(file.path);\r\n      if (!isSourceMap) this.push(file);\r\n      cb();\r\n    }))\r\n    .pipe(sourcemaps.write('.'))\r\n    .pipe(gulp.dest('dist/'));\r\n});\r\n```\r\n\r\n## Release History\r\n* 3.2.0 - Ability to use multiple compilers (@saschagehlich).\r\n* 3.1.0 - Better error output (@hi-q).\r\n* 3.0.1 - Fix fonts being passed through streams (@mattlewis92).\r\n* 3.0.0 - Remove special handling of source maps. Update dependencies.\r\n* 2.3.0 - Emit stats.compilation.errors as `error` (@JakeChampion).\r\n* 2.2.0 - Add support for source maps (@OliverJAsh).\r\n* 2.1.0 - Avoid modifying options by reference (@shinuza). Replace log with correct package name (@vinnymac).\r\n* 2.0.0 - Rename to webpack-stream and now it's totally not a gulp plugin.\r\n* 1.5.0 - Update webpack to 1.9.x (@nmccready). Update other dependencies.\r\n* 1.4.0 - Update webpack to 1.8.x (@Zolmeister).\r\n* 1.3.2 - Fix another place with ? in name (@raphaelluchini).\r\n* 1.3.1 - Fix for paths with ? in their name (@raphaelluchini).\r\n* 1.3.0 - Updating to webpack >= 1.7.\r\n* 1.2.0 - Updating to webpack >= 1.5, vinyl >= 0.4, memory-fs >= 0.2.\r\n* 1.1.2 - Fixes to default stats for logging (@mdreizin).\r\n* 1.1.1 - Add additional stats to default logging (@mdreizin).\r\n* 1.1.0 - Exposes internal webpack if asked via `require('webpack-stream').webpack`\r\n* 1.0.0 - Support named chunks pipe'd in for multiple entry points.\r\n* 0.4.1 - Fixed regression for multiple entry point support.\r\n* 0.4.0 - Display an error message if there are no input files (@3onyc). Add message on why task is not finishing, Add ability to track compilation progress, Add ability to configure stats output via options (@kompot). Bump webpack version (@koistya).\r\n* 0.3.0 - Update deps (@kompot). Fixes to determining entry (@btipling and @abergs).\r\n* 0.2.0 - Support for `watch` mode (@ampedandwired).\r\n* 0.1.0 - Initial release\r\n\r\n## License\r\nCopyright (c) 2015 Kyle Robinson Young  \r\nLicensed under the MIT license.\r\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shama/webpack-stream.git"
  },
  "scripts": {
    "test": "semistandard && node test/test.js"
  },
  "semistandard": {
    "ignore": [
      "test/fixtures",
      "examples"
    ]
  },
  "version": "3.2.0"
}
